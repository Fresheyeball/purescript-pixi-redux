// Generated by psc-make version 0.6.4
"use strict";
var Prelude = require("Prelude");
var Context = require("Context");
var Data_Function = require("Data.Function");
var Control_Monad_Eff = require("Control.Monad.Eff");
function method0Impl(fnName, o){  return o[fnName]();};
function method0EffImpl(fnName, o){  return function(){    return o[fnName]();  };};
function method1Impl(fnName, o, a){  return o[fnName](a);};
function method1EffImpl(fnName, o, a){  return function(){    return o[fnName](a);  };};
function method2Impl(fnName, o, a, b){  return o[fnName](a, b);};
function method2EffImpl(fnName, o, a, b){  return function(){    return o[fnName](a, b);  };};
function method3Impl(fnName, o, a, b, c){  return o[fnName](a, b, c);};
function method3EffImpl(fnName, o, a, b, c){  return function(){    return o[fnName](a, b, c);  };};
function method4Impl(fnName, o, a, b, c, e){  return o[fnName](a, b, c, e);};
function method4EffImpl(fnName, o, a, b, c, e){  return function(){    return o[fnName](a, b, c, e);  };};
function method5Impl(fnName, o, a, b, c, e, f){  return o[fnName](a, b, c, e, f);};
function method5EffImpl(fnName, o, a, b, c, e, f){  return function(){    return o[fnName](a, b, c, e, f);  };};
function getterImpl(propName, o){  return function(){    return o[propName];  };};
function modifierImpl(propName, o, fn){  return function(){    o[propName] = fn(o[propName]);    return o[propName];  };};
function setterImpl(propName, o, v){  return function(){    o[propName] = v;    return v;  };};

  function instantiate0FromImpl(string, o){
    return function(){
      return new o[string]();
    };
  };

  function instantiate1FromImpl(string, o, x){
    return function(){
      return new o[string](x);
    };
  };

  function instantiate2FromImpl(string, o, x, y){
    return function(){
      return new o[string](x, y);
    };
  };

  function instantiate3FromImpl(string, o, x, y, z){
    return function(){
      return new o[string](x, y, z);
    };
  };

  function instantiate4FromImpl(string, o, w, x, y, z){
    return function(){
      return new o[string](w, x, y, z);
    };
  };

  function instantiate5FromImpl(string, o, v, w, x, y, z){
    return function(){
      return new o[string](v, w, x, y, z);
    };
  };
var setter = Data_Function.runFn3(setterImpl);
var modifier = Data_Function.runFn3(modifierImpl);
var method5Eff = Data_Function.runFn7(method5EffImpl);
var method5 = Data_Function.runFn7(method5Impl);
var method4Eff = Data_Function.runFn6(method4EffImpl);
var method4 = Data_Function.runFn6(method4Impl);
var method3Eff = Data_Function.runFn5(method3EffImpl);
var method3 = Data_Function.runFn5(method3Impl);
var method2Eff = Data_Function.runFn4(method2EffImpl);
var method2 = Data_Function.runFn4(method2Impl);
var method1Eff = Data_Function.runFn3(method1EffImpl);
var method1 = Data_Function.runFn3(method1Impl);
var method0Eff = Data_Function.runFn2(method0EffImpl);
var method0 = Data_Function.runFn2(method0Impl);
var instantiate5From = Data_Function.runFn7(instantiate5FromImpl);
var instantiate5 = function (s) {
    return function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function __do() {
                            var c$prime = Context.getContext();
                            return instantiate5From(s)(c$prime)(a)(b)(c)(d)(e)();
                        };
                    };
                };
            };
        };
    };
};
var instantiate4From = Data_Function.runFn6(instantiate4FromImpl);
var instantiate4 = function (s) {
    return function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function __do() {
                        var c$prime = Context.getContext();
                        return instantiate4From(s)(c$prime)(a)(b)(c)(d)();
                    };
                };
            };
        };
    };
};
var instantiate3From = Data_Function.runFn5(instantiate3FromImpl);
var instantiate3 = function (s) {
    return function (a) {
        return function (b) {
            return function (c) {
                return function __do() {
                    var c$prime = Context.getContext();
                    return instantiate3From(s)(c$prime)(a)(b)(c)();
                };
            };
        };
    };
};
var instantiate2From = Data_Function.runFn4(instantiate2FromImpl);
var instantiate2 = function (s) {
    return function (a) {
        return function (b) {
            return function __do() {
                var c = Context.getContext();
                return instantiate2From(s)(c)(a)(b)();
            };
        };
    };
};
var instantiate1From = Data_Function.runFn3(instantiate1FromImpl);
var instantiate1 = function (s) {
    return function (a) {
        return function __do() {
            var c = Context.getContext();
            return instantiate1From(s)(c)(a)();
        };
    };
};
var instantiate0From = Data_Function.runFn2(instantiate0FromImpl);
var instantiate0 = function (s) {
    return Prelude[">>="](Control_Monad_Eff.bindEff)(Context.getContext)(instantiate0From(s));
};
var getter = Data_Function.runFn2(getterImpl);
var gc = Prelude[">>="](Control_Monad_Eff.bindEff)(Context.getContext);
var getterC = function (s) {
    return gc(function (c) {
        return getter(s)(c);
    });
};
var method0C = function (s) {
    return gc(function (c) {
        return method0(s)(c);
    });
};
var method0EffC = function (s) {
    return gc(function (c) {
        return method0Eff(s)(c);
    });
};
var method1C = function (s) {
    return function (a) {
        return gc(function (c) {
            return method1(s)(c)(a);
        });
    };
};
var method1EffC = function (s) {
    return function (a) {
        return gc(function (c) {
            return method1Eff(s)(c)(a);
        });
    };
};
var method2C = function (s) {
    return function (a) {
        return function (b) {
            return gc(function (c) {
                return method2(s)(c)(a)(b);
            });
        };
    };
};
var method2EffC = function (s) {
    return function (a) {
        return function (b) {
            return gc(function (c) {
                return method2Eff(s)(c)(a)(b);
            });
        };
    };
};
var method3C = function (s) {
    return function (a) {
        return function (b) {
            return function (c) {
                return gc(function (c$prime) {
                    return method3(s)(c$prime)(a)(b)(c);
                });
            };
        };
    };
};
var method3EffC = function (s) {
    return function (a) {
        return function (b) {
            return function (c) {
                return gc(function (c$prime) {
                    return method3Eff(s)(c$prime)(a)(b)(c);
                });
            };
        };
    };
};
var method4C = function (s) {
    return function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return gc(function (c$prime) {
                        return method4(s)(c$prime)(a)(b)(c)(d);
                    });
                };
            };
        };
    };
};
var method4EffC = function (s) {
    return function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return gc(function (c$prime) {
                        return method4Eff(s)(c$prime)(a)(b)(c)(d);
                    });
                };
            };
        };
    };
};
var method5C = function (s) {
    return function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return gc(function (c$prime) {
                            return method5(s)(c$prime)(a)(b)(c)(d)(e);
                        });
                    };
                };
            };
        };
    };
};
var method5EffC = function (s) {
    return function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return gc(function (c$prime) {
                            return method5Eff(s)(c$prime)(a)(b)(c)(d)(e);
                        });
                    };
                };
            };
        };
    };
};
var modifierC = function (s) {
    return function (f) {
        return gc(function (c) {
            return modifier(s)(c)(f);
        });
    };
};
var setterC = function (s) {
    return function (v) {
        return gc(function (c) {
            return setter(s)(c)(v);
        });
    };
};
module.exports = {
    instantiate5From: instantiate5From, 
    instantiate5: instantiate5, 
    instantiate4From: instantiate4From, 
    instantiate4: instantiate4, 
    instantiate3From: instantiate3From, 
    instantiate3: instantiate3, 
    instantiate2From: instantiate2From, 
    instantiate2: instantiate2, 
    instantiate1From: instantiate1From, 
    instantiate1: instantiate1, 
    instantiate0From: instantiate0From, 
    instantiate0: instantiate0, 
    setterC: setterC, 
    setter: setter, 
    modifierC: modifierC, 
    modifier: modifier, 
    getterC: getterC, 
    getter: getter, 
    method5EffC: method5EffC, 
    method5C: method5C, 
    method5Eff: method5Eff, 
    method5: method5, 
    method4EffC: method4EffC, 
    method4C: method4C, 
    method4Eff: method4Eff, 
    method4: method4, 
    method3EffC: method3EffC, 
    method3C: method3C, 
    method3Eff: method3Eff, 
    method3: method3, 
    method2EffC: method2EffC, 
    method2C: method2C, 
    method2Eff: method2Eff, 
    method2: method2, 
    method1EffC: method1EffC, 
    method1C: method1C, 
    method1Eff: method1Eff, 
    method1: method1, 
    method0EffC: method0EffC, 
    method0C: method0C, 
    method0Eff: method0Eff, 
    method0: method0
};
