-- Generated by psc-make version 0.6.4
module Control.Monad.ST where
import Control.Monad.Eff ()
import Control.Monad.ST ()
import Prim ()
import Prelude ()
import Control.Monad.Eff ()
foreign import data STRef :: * -> * -> *
foreign import data ST :: * -> !
foreign import pureST :: forall a. (forall h r. Control.Monad.Eff.Eff (st :: Control.Monad.ST.ST h | r) a) -> a
foreign import runST :: forall a r. (forall h. Control.Monad.Eff.Eff (st :: Control.Monad.ST.ST h | r) a) -> Control.Monad.Eff.Eff r a
foreign import writeSTRef :: forall a h r. Control.Monad.ST.STRef h a -> a -> Control.Monad.Eff.Eff (st :: Control.Monad.ST.ST h | r) a
foreign import modifySTRef :: forall a h r. Control.Monad.ST.STRef h a -> (a -> a) -> Control.Monad.Eff.Eff (st :: Control.Monad.ST.ST h | r) a
foreign import readSTRef :: forall a h r. Control.Monad.ST.STRef h a -> Control.Monad.Eff.Eff (st :: Control.Monad.ST.ST h | r) a
foreign import newSTRef :: forall a h r. a -> Control.Monad.Eff.Eff (st :: Control.Monad.ST.ST h | r) (Control.Monad.ST.STRef h a)
